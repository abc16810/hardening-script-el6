---
- name: 文件权限检查
  hosts: localhost
  gather_facts: yes
  user: root
  vars:
  vars_files:
    - default_vars.yml
  tasks:
     - name: 创建临时目录来保存任何临时文件 
       command: "mktemp -d"
       register: mktemp_result
       changed_when: False
       tags:
          - always

     - name: 为临时目录设置一个fact 
       set_fact:
         temp_dir: "{{ mktemp_result.stdout }}"
       changed_when: False
       tags:
         - always

     - name: 证所有已安装的RPM包 
       shell: "rpm -Va > {{ temp_dir }}/rpmverify.txt"
       args:
         warn: no
       failed_when: False
       changed_when: False
       register: rpmverify_task
       async: 300
       poll: 0
       when:
         - ansible_os_family | lower in ['redhat', 'suse']
         - security_reset_perm_ownership | bool
       tags:
         - rpm
         - high
         - skip_ansible_lint
          
     - name: V-71849 - 获取具有不正确文件权限或所有权的包 
       shell: "grep '^.M' {{ temp_dir }}/rpmverify.txt | awk '{ print $NF }'"
       args:
         warn: no
       register: rpmverify_package_list
       changed_when: False
       when:
         - ansible_pkg_mgr in ['yum', 'zypper']
         - security_reset_perm_ownership | bool
       tags:
         - file_perms
         - high
         - V-71849

     - name: V-71849 - 将文件权限/所有权重置为供应商值 
       shell: "rpm {{ item[0] }} `rpm -qf {{ item[1] }}`"
       args:
         warn: no
       changed_when: false
       with_nested:
         - ['--setperms', '--setugids']
         - "{{ rpmverify_package_list.stdout_lines | default([]) }}"
       when:
         - ansible_pkg_mgr in ['yum', 'zypper']
         - rpmverify_package_list is defined
         - rpmverify_package_list.stdout_lines | length > 0
       async: 300
       poll: 0
       tags:
         - file_perms
         - high
         - V-71849
         # don't trigger ANSIBLE0013
         #     - skip_ansible_lint

     - name: 搜索所有者无效的文件/目录 
       command: find / -xdev -nouser 
       args:
         warn: no
       register: invalid_owner_files
       changed_when: false
       when:
         - security_search_for_invalid_owner | bool
       tags:
         - always
     
     - name: V-72007 - 所有文件和目录必须有一个有效的所有者 
       debug:
         msg: |
           Files and directories were found that are owned by an invalid user:
           {{ invalid_owner_files.stdout_lines | join('\n') }}
       when:
         - invalid_owner_files is defined
         - invalid_owner_files.stdout_lines is defined
         - invalid_owner_files.stdout_lines | length > 0
       tags:
         - file_perms
         - medium
         - V-72007

     - name: 搜索具有无效组所有者的文件/目录 
       command: find / -xdev -nogroup 
       args:
         warn: no
       register: invalid_group_owner_files
       changed_when: false
       when:
         - security_search_for_invalid_group_owner | bool
       tags:
         - always
     
     - name: V-72009 - 所有文件和目录必须有一个有效的组所有者 
       debug:
         msg: |
           Files and directories were found that are owned by an invalid group:
           {{ invalid_group_owner_files.stdout_lines | join('\n') }}
       when:
         - invalid_group_owner_files is defined
         - invalid_group_owner_files.stdout_lines is defined
         - invalid_group_owner_files.stdout_lines | length > 0
       tags:
         - file_perms
         - medium
         - V-72009

     - name: 获取系统上所有用户的用户数据 
       get_users:
         min_uid: 0
       register: user_list
       check_mode: no
       tags:
         - always
     
          
     - name: 在家目录(/home)上设置正确的所有者、组所有者和权限 
       file:
         dest: "{{ item.dir }}"
         owner: "{{ item.name }}"
         group: "{{ item.group.name }}"
         mode: "g-ws,o-rwxt"
       when:
         - item.uid >= 1000
         - item.name != 'nobody'
         - security_set_home_directory_permissions_and_owners | bool
       with_items: "{{ user_list.users | selectattr('uid', 'greaterthan', 999) | list }}"
       tags:
         - medium
         - file_perms
         - V-72017
    
     - name: 找到所有可写的目录 
       shell: "find / -perm -002 -type d -exec ls -lLd {} \\; | tr -s ' ' | cut -d' ' -f 4,9 | grep -v ^root"
       register: world_writable_dirs
       changed_when: False
       failed_when: False
       check_mode: no
       when:
         - security_find_world_writable_dirs | bool
       tags:
         - always

     - name: V-72047 - 所有完全可写目录必须由根、系统、bin或应用程序组拥有 
       debug:
         msg: |
           The group owners on the following world-writable directories should be examined:
           {{ world_writable_dirs.stdout }}
       when:
         - world_writable_dirs is defined
         - world_writable_dirs is not skipped
       tags:
         - medium
         - file_perms
         - V-72047

     - name: 检查 /etc/cron.allow
       stat:
         path: /etc/cron.allow
       register: cron_allow_check
       tags:
         - always
     
     - name: 设置 owner/group 所有者 /etc/cron.allow
       file:
         path: /etc/cron.allow
         owner: root
         group: root
       when:
         - cron_allow_check is defined
         - cron_allow_check.stat.exists
       tags:
         - medium
         - file_perms
         - V-72053
         - V-72055
               
     - name: V-72277 检查.shosts或shosts.qquiv文件
       find:
         paths: /
         recurse: yes
         hidden: yes
         patterns: '.shosts,shosts.equiv'
       changed_when: False
       register: shosts_find
       async: 300
       poll: 0
       when:
         - security_rhel7_remove_shosts_files | bool
       tags:
         - high
         - auth
         - V-72277
          

